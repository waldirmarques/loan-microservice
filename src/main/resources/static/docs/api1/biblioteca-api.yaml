#informações da api
swagger: "2.0"
info:
  description: "Essa versão pode fornecer dados puros nos formatos JSON e tenta aderir à arquitetura REST o máximo
            possível. Nesta página, você pode conhecer e experimentar os URLs para acessar os dados, os parâmetros
            da sequência de consultas que podem ser aplicados para filtrar e selecionar resultados e as estruturas
            de dados retornadas. Por padrão, todos os serviços de listagem retornam 24 itens.\n
            ATENÇÃO: Esta versão ainda está incompleta, sujeita a alterações."
  version: "1.0.0"
  title: "Api-biblioteca"
  contact:
    email: "waldir.sousa@phoebustecnologia.com.br"
  license:
    name: "Open Source"


tags:
  - name: "book-controller"
    description: "All about library books"
  - name: "user-controller"
    description: "All about library users"
  - name: "loan-controller"
    description: "All about library loans"
schemes:
  - "http"
  - "https"

paths:
  /v1/api/book: #Endpoint para livros
    post: #adicionar um novo livro
      tags:
        - "book-controller"
      summary: "Adicionar novo livro a biblioteca"
      description: "Endpoint que adiciona um novo objeto Book no banco de dados."
      operationId: "insertBook"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "objDTO"
          description: "Parametros necessarios para adicionar livro em biblioteca."
          required: true
          schema:
            $ref: "#/definitions/Book"
      responses:
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"

    put: #atualizar um livro
      tags:
        - "book-controller"
      summary: "Atualizar livro"
      description: "Endpoint que atualiza um objeto Book no banco de dados."
      operationId: "updateBook"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"

        - in: body
          name: "objDTO"
          description: "Parametros necessarios para atualizar livro em biblioteca."
          required: true
          schema:
            $ref: "#/definitions/Book"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"
        405:
          description: "Validation exception"

    get:  #buscar todos os livros
      tags:
        - "book-controller"
      summary: "Buscar todos os livros"
      description: ""
      operationId: "findAllBook"
      produces:
        - "application/json"

      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"

    delete: #Deletar livros
      tags:
        - "book-controller"
      summary: "Deletar livros"
      description: ""
      operationId: "deleteBook"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"

      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"

  /v1/api/user: #Endpoint para usuários
    post:
      tags:
        - "user-controller"
      summary: "Adicionar novo usuário a biblioteca"
      description: "Endpoint que adiciona um novo objeto userApp no banco de dados."
      operationId: "insertUserApp"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "objDTO"
          description: "Parametros necessarios para adicionar userApp na biblioteca."
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"

    put:
      tags:
        - "user-controller"
      summary: "Atualizar usuário"
      description: "Endpoint que atualiza um objeto UserApp no banco de dados."
      operationId: "updateUserApp"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"

        - in: body
          name: "objDTO"
          description: "Parametros necessarios para atualizar UserApp em biblioteca."
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
        405:
          description: "Validation exception"

    get:  #buscar todos os usuários
      tags:
        - "user-controller"
      summary: "Buscar todos os usuários"
      description: ""
      operationId: "findAllUser"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"

    delete: #Deletar usuário
      tags:
        - "user-controller"
      summary: "Deletar usuário"
      description: ""
      operationId: "deleteUser"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"

      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"

  /v1/api/loan: #Endpoint para emprestimos
    post: #adicionar um novo emprestimo
      tags:
        - "loan-controller"
      summary: "Adicionar novo emprestimo"
      description: "Endpoint que adiciona um novo objeto Loan no banco de dados."
      operationId: "insertLoan"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "objDTO"
          description: "Parametros necessarios para adicionar emprestimo."
          required: true
          schema:
            $ref: "#/definitions/Loan"
      responses:
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"

    put: #atualizar um livro
      tags:
        - "loan-controller"
      summary: "Atualizar emprestimo"
      description: "Endpoint que atualiza um objeto Loan no banco de dados."
      operationId: "updateLoan"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"

        - in: body
          name: "objDTO"
          description: "Parametros necessarios para atualizar emprestimo."
          required: true
          schema:
            $ref: "#/definitions/Loan"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Loan not found"
        405:
          description: "Validation exception"

    get:  #buscar todos os livros
      tags:
        - "loan-controller"
      summary: "Buscar todos os emprestimos"
      description: ""
      operationId: "findAllLoan"
      produces:
        - "application/json"

      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Loan"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"

    delete: #Deletar livros
      tags:
        - "loan-controller"
      summary: "Deletar emprestimo"
      description: ""
      operationId: "deleteLoan"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          format: "int64"

      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Loan not found"

definitions:
  #Emprestimos
  Loan:
    type: object
    properties:
      User:
        type: object
        required:
          - name
          - age
          - fone
        properties:
          name:
            type: string
          age:
            type: integer
          fone:
            type: string

          Book:
            type: array
            items:
              $ref: '#/definitions/Book'
      loanTime:
        type: string

  #UserAPP
  User:
    type: "object"
    required:
      - "name"
      - "age"
      - "fone"
    properties:
      name:
        type: "string"
      age:
        type: "integer"
      fone:
        type: "string"

  #Book
  Book:
    type: "object"
    required:
      - "author"
      - "isbn"
      - "resume"
      - "title"
      - "yearBook"
    properties:
      title:
        type: "string"

      resume:
        type: "string"

      isbn:
        type: "string"

      author:
        type: "string"

      yearBook:
        type: "string"
        format: "date"